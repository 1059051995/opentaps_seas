# Generated by Django 2.1.10 on 2019-08-07 15:49

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.hstore
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0028_auto_20190730_1003'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='bacnetconfig',
            name='site',
        ),
        migrations.RemoveField(
            model_name='entity',
            name='bacnet_fields',
        ),
        migrations.DeleteModel(
            name='BacnetConfig',
        ),
        migrations.RunSQL(
            """
            DROP VIEW IF EXISTS core_point_view;
            CREATE OR REPLACE VIEW core_point_view AS
                SELECT entity_id,
                topic,
                'N/A' as current_value,
                kv_tags->'id' as object_id,
                kv_tags->'dis' as description,
                kv_tags->'kind' as kind,
                kv_tags->'unit' as unit,
                kv_tags->'siteRef' as site_id,
                kv_tags->'equipRef' as equipment_id,
                dashboard_uid,
                kv_tags,
                m_tags
                FROM core_entity
                WHERE 'point' = ANY(m_tags);
            """,
            reverse_sql="""
            DROP VIEW IF EXISTS core_point_view;
            CREATE OR REPLACE VIEW core_point_view AS
                SELECT entity_id,
                topic,
                'N/A' as current_value,
                kv_tags->'id' as object_id,
                kv_tags->'dis' as description,
                kv_tags->'kind' as kind,
                kv_tags->'unit' as unit,
                kv_tags->'siteRef' as site_id,
                kv_tags->'equipRef' as equipment_id,
                dashboard_uid,
                bacnet_fields,
                kv_tags,
                m_tags
                FROM core_entity
                WHERE 'point' = ANY(m_tags);            
            """,
        )
    ]
