# Generated by Django 2.2.9 on 2020-01-30 07:23

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.hstore
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import opentaps_seas.core.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0049_uom_conversion'),
    ]

    operations = [
        migrations.AddField(
            model_name='meterproduction',
            name='model_baseline_value',
            field=models.FloatField(blank=True, null=True, verbose_name='Model Baseline Value'),
        ),
        migrations.AddField(
            model_name='meterproduction',
            name='actual_value',
            field=models.FloatField(blank=True, null=True, verbose_name='Actual Value'),
        ),
        migrations.AlterField(
            model_name='meterproduction',
            name='amount',
            field=models.FloatField(null=True, verbose_name='Net Value'),
        ),
        migrations.RenameField(
            model_name='meterproduction',
            old_name='amount',
            new_name='net_value',
        ),
        migrations.AlterField(
            model_name='meterproduction',
            name='error_bands',
            field=django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True, verbose_name='Error Bands'),
        ),
        migrations.AlterField(
            model_name='meterproduction',
            name='meter_production_reference',
            field=django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True, verbose_name='Meter Production Reference'),
        ),
        migrations.AlterField(
            model_name='meterproduction',
            name='meter_production_type',
            field=models.CharField(max_length=255, verbose_name='Meter Production Type'),
        ),
        migrations.AlterField(
            model_name='meterproduction',
            name='source',
            field=models.CharField(max_length=255, verbose_name='Source'),
        ),
        migrations.CreateModel(
            name='ValuationMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255, verbose_name='Description')),
            ],
            options={
                'db_table': 'core_valuation_method',
            },
        ),
        migrations.CreateModel(
            name='ValuationMethodPeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('from_day_of_week', models.IntegerField(default=0)),
                ('to_day_of_week', models.IntegerField(default=6)),
                ('from_time', models.TimeField(default=opentaps_seas.core.models.day_start_time)),
                ('to_time', models.TimeField(default=opentaps_seas.core.models.day_end_time)),
                ('rate', models.FloatField(null=True, verbose_name='Rate')),
                ('custom_method', models.CharField(blank=True, max_length=255, null=True, verbose_name='Custom Calculation Method')),
                ('currency_uom', models.ForeignKey(limit_choices_to={'type': 'currency'}, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.UnitOfMeasure')),
                ('unit_uom', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.UnitOfMeasure')),
                ('valuation_method', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.ValuationMethod')),
            ],
            options={
                'db_table': 'core_valuation_method_period',
            },
        ),
        migrations.CreateModel(
            name='MeterRatePlan',
            fields=[
                ('rate_plan_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='Rate Plan ID')),
                ('description', models.CharField(max_length=255, verbose_name='Description')),
                ('params', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True, verbose_name='Parameters')),
                ('from_datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='From Date')),
                ('thru_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Thru Date')),
                ('billing_day', models.IntegerField(default=0, verbose_name='Billing Day')),
                ('source', models.CharField(max_length=255, verbose_name='Source')),
                ('created_datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created Date')),
                ('billing_frequency_uom', models.ForeignKey(limit_choices_to={'type': 'time_interval'}, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.UnitOfMeasure')),
                ('created_by_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('valuation_method', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.ValuationMethod')),
            ],
            options={
                'db_table': 'core_meter_rate_plan',
            },
        ),
        migrations.CreateModel(
            name='MeterFinancialValue',
            fields=[
                ('meter_value_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='Meter Value ID')),
                ('from_datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='From Date')),
                ('thru_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Thru Date')),
                ('meter_production_type', models.CharField(max_length=255, verbose_name='Meter Production Type')),
                ('meter_production_reference', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True, verbose_name='Meter Production Reference')),
                ('model_baseline_value', models.FloatField(null=True, verbose_name='Model Baseline Value')),
                ('actual_value', models.FloatField(null=True, verbose_name='Actual Value')),
                ('net_value', models.FloatField(null=True, verbose_name='Net Value')),
                ('source', models.CharField(max_length=255, verbose_name='Source')),
                ('created_datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created Date')),
                ('created_by_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('meter', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.Meter')),
                ('uom', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.UnitOfMeasure')),
            ],
            options={
                'db_table': 'core_meter_financial_value',
            },
        ),
    ]
